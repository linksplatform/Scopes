{
  "README.html": {
    "href": "README.html",
    "title": "Scopes | LinksPlatform's Platform.Scopes Library",
    "keywords": "Scopes LinksPlatform's Platform.Scopes Class Library. Namespace: Platform.Scopes Forked from: LinksPlatform/Helpers/Scopes NuGet package: Platform.Scopes Documentation PDF file with code for e-readers. Depend on Platform.Singletons Mystery files .travis.yml - Travis CI build configuration. docfx.json and toc.yml - DocFX build configuration. format-document.sh - script for formatting tex file for generating PDF from it. format-csharp-files.py - script for formatting .cs files as a part of tex file. generate-pdf.sh - script that generates PDF with code for e-readers. publish-docs.sh - script that publishes generated documentation and PDF with code for e-readers to gh-pages branch. push-nuget.bat - Windows script for publishing current version of NuGet package."
  },
  "api/Platform.Scopes.html": {
    "href": "api/Platform.Scopes.html",
    "title": "Namespace Platform.Scopes | LinksPlatform's Platform.Scopes Library",
    "keywords": "Namespace Platform.Scopes Classes Scope Scope<TInclude> Use<T>"
  },
  "api/Platform.Scopes.Scope-1.html": {
    "href": "api/Platform.Scopes.Scope-1.html",
    "title": "Class Scope<TInclude> | LinksPlatform's Platform.Scopes Library",
    "keywords": "Class Scope<TInclude> Inheritance Object Scope Scope<TInclude> Inherited Members Scope.Global Scope.ExcludeAssemblyOf<T>() Scope.ExcludeAssemblyOfType(Type) Scope.ExcludeAssembly(Assembly) Scope.Exclude<T>() Scope.Exclude(Object) Scope.IncludeAssemblyOf<T>() Scope.IncludeAssemblyOfType(Type) Scope.IncludeAssembly(Assembly) Scope.Include<T>() Scope.Include(Object) Scope.Use<T>() Scope.UseSingleton<T>(IFactory<T>) Scope.UseSingleton<T>(Func<T>) Scope.UseAndReturn<T>(T) Scope.Use(Object) Scope.TryResolve<T>(T) Scope.TryResolve(Type, Object) Scope.SortConstructors(List<ConstructorInfo>) Scope.TryResolveInstance(List<ConstructorInfo>, Object) Scope.Dispose(Boolean, Boolean) Namespace : Platform.Scopes Assembly : Platform.Scopes.dll Syntax public class Scope<TInclude> : Scope Type Parameters Name Description TInclude Constructors | Improve this Doc View Source Scope() Declaration public Scope() | Improve this Doc View Source Scope(Boolean) Declaration public Scope(bool autoInclude) Parameters Type Name Description Boolean autoInclude | Improve this Doc View Source Scope(Boolean, Boolean) Declaration public Scope(bool autoInclude, bool autoExplore) Parameters Type Name Description Boolean autoInclude Boolean autoExplore"
  },
  "api/Platform.Scopes.Use-1.html": {
    "href": "api/Platform.Scopes.Use-1.html",
    "title": "Class Use<T> | LinksPlatform's Platform.Scopes Library",
    "keywords": "Class Use<T> Inheritance Object Use<T> Namespace : Platform.Scopes Assembly : Platform.Scopes.dll Syntax public static class Use<T> : object Type Parameters Name Description T Properties | Improve this Doc View Source New Declaration public static Disposable<T> New { get; } Property Value Type Description Disposable <T> | Improve this Doc View Source Single Declaration public static T Single { get; } Property Value Type Description T"
  },
  "api/Platform.Scopes.Scope.html": {
    "href": "api/Platform.Scopes.Scope.html",
    "title": "Class Scope | LinksPlatform's Platform.Scopes Library",
    "keywords": "Class Scope Inheritance Object Scope Scope<TInclude> Namespace : Platform.Scopes Assembly : Platform.Scopes.dll Syntax public class Scope : DisposableBase Constructors | Improve this Doc View Source Scope() Declaration public Scope() | Improve this Doc View Source Scope(Boolean) Declaration public Scope(bool autoInclude) Parameters Type Name Description Boolean autoInclude | Improve this Doc View Source Scope(Boolean, Boolean) Declaration public Scope(bool autoInclude, bool autoExplore) Parameters Type Name Description Boolean autoInclude Boolean autoExplore Fields | Improve this Doc View Source Global Declaration public static readonly Scope Global Field Value Type Description Scope Methods | Improve this Doc View Source Dispose(Boolean, Boolean) Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual Boolean wasDisposed | Improve this Doc View Source Exclude(Object) Declaration public void Exclude(object object) Parameters Type Name Description Object object | Improve this Doc View Source Exclude<T>() Declaration public void Exclude<T>() Type Parameters Name Description T | Improve this Doc View Source ExcludeAssembly(Assembly) Declaration public void ExcludeAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly | Improve this Doc View Source ExcludeAssemblyOf<T>() Declaration public void ExcludeAssemblyOf<T>() Type Parameters Name Description T | Improve this Doc View Source ExcludeAssemblyOfType(Type) Declaration public void ExcludeAssemblyOfType(Type type) Parameters Type Name Description Type type | Improve this Doc View Source Include(Object) Declaration public void Include(object object) Parameters Type Name Description Object object | Improve this Doc View Source Include<T>() Declaration public void Include<T>() Type Parameters Name Description T | Improve this Doc View Source IncludeAssembly(Assembly) Declaration public void IncludeAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly | Improve this Doc View Source IncludeAssemblyOf<T>() Declaration public void IncludeAssemblyOf<T>() Type Parameters Name Description T | Improve this Doc View Source IncludeAssemblyOfType(Type) Declaration public void IncludeAssemblyOfType(Type type) Parameters Type Name Description Type type | Improve this Doc View Source SortConstructors(List<ConstructorInfo>) Declaration protected virtual void SortConstructors(List<ConstructorInfo> resultConstructors) Parameters Type Name Description List < ConstructorInfo > resultConstructors | Improve this Doc View Source TryResolve(Type, out Object) Declaration public bool TryResolve(Type requiredType, out object resolved) Parameters Type Name Description Type requiredType Object resolved Returns Type Description Boolean | Improve this Doc View Source TryResolve<T>(out T) Declaration public bool TryResolve<T>(out T resolved) Parameters Type Name Description T resolved Returns Type Description Boolean Type Parameters Name Description T | Improve this Doc View Source TryResolveInstance(List<ConstructorInfo>, out Object) Declaration protected virtual bool TryResolveInstance(List<ConstructorInfo> constructors, out object resolved) Parameters Type Name Description List < ConstructorInfo > constructors Object resolved Returns Type Description Boolean | Improve this Doc View Source Use(Object) Declaration public void Use(object object) Parameters Type Name Description Object object | Improve this Doc View Source Use<T>() Declaration public T Use<T>() Returns Type Description T Type Parameters Name Description T Remarks TODO: Use Default[T].Instance if the only constructor object has is parameterless. TODO: Think of interface chaining IDoubletLinks[T] (default) -> IDoubletLinks[T] (checker) -> IDoubletLinks[T] (synchronizer) (may be UseChain[IDoubletLinks[T], Types[DefaultLinks, DefaultLinksDependencyChecker, DefaultSynchronizedLinks]] TODO: Add support for factories | Improve this Doc View Source UseAndReturn<T>(T) Declaration public T UseAndReturn<T>(T object) Parameters Type Name Description T object Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source UseSingleton<T>(Func<T>) Declaration public T UseSingleton<T>(Func<T> creator) Parameters Type Name Description Func <T> creator Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source UseSingleton<T>(IFactory<T>) Declaration public T UseSingleton<T>(IFactory<T> factory) Parameters Type Name Description IFactory <T> factory Returns Type Description T Type Parameters Name Description T"
  }
}